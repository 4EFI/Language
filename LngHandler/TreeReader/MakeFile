 
# makefile data 

SRC = src/main.cpp            \
 	  src/tree_lng.cpp        \
	  src/tree_lng_dump.cpp   \
      src/tree_lng_reader.cpp \
	  src/str_algs.cpp        \
   	  src/file_algs.cpp

# already compiled objects
OBJ = ../LOG/lib/LOG.o 

ifeq ($(OS),Windows_NT)
	OUTPUT_FILE_NAME = compiler.exe
else
    OUTPUT_FILE_NAME = compiler
endif

CC = g++
CFLAGS = -Wshadow -Winit-self -Wredundant-decls -Wcast-align -Wundef -Wfloat-equal -Winline -Wunreachable-code -Wmissing-declarations -Wmissing-include-dirs -Wswitch-enum -Wswitch-default -Weffc++ -Wmain -Wextra -Wall -g -pipe -fexceptions -Wcast-qual -Wconversion -Wctor-dtor-privacy -Wempty-body -Wformat-security -Wformat=2 -Wignored-qualifiers -Wlogical-op -Wmissing-field-initializers -Wnon-virtual-dtor -Woverloaded-virtual -Wpointer-arith -Wsign-promo -Wstack-usage=8192 -Wstrict-aliasing -Wstrict-null-sentinel -Wtype-limits -Wwrite-strings -D_DEBUG -D_EJUDGE_CLIENT_SIDE
IFLAGS = -I./include/ -I../LOG/ -I./../


#compiling & linking

OBJ_TMP = $(subst .cpp,.o,   $(SRC))
OBJ_    = $(subst src,build, $(OBJ_TMP))

# linking
link : $(OBJ) $(OBJ_) 
	$(CC) $(IFLAGS) $(CFLAGS) $^ -o $(OUTPUT_FILE_NAME)  

#compiling
define COMPILE
    mkdir -p $(@D)
	$(CC) $(IFLAGS) $(CFLAGS) -c $(subst .o,.cpp, $(subst build,src, $@)) -o $@	
endef

build/%.o : src/%.cpp  	
	$(COMPILE) 


clear :
	rm -f ./build/*.o

